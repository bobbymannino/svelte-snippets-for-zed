{
  "Svelte `$derived()`": {
    "prefix": "sv-derived",
    "body": ["const $1 = \\$derived($2);"],
    "description": "A Svelte `$derived()` function."
  },
  "Svelte `$state()`": {
    "prefix": "sv-state",
    "body": ["let $1 = \\$state($2);"],
    "description": "A Svelte `$state()` function."
  },
  "Svelte `$effect()`": {
    "prefix": "sv-effect",
    "body": ["\\$effect(() => { $1 })"],
    "description": "A Svelte `$effect()` function."
  },
  "Svelte `$inspect()`": {
    "prefix": "sv-inspect",
    "body": ["\\$inspect($1);"],
    "description": "A Svelte `$inspect()` function."
  },
  "Svelte handle hook": {
    "prefix": "sv-handle",
    "body": [
      "import type { Handle } from '@sveltejs/kit';",
      "",
      "export const handle: Handle = async ({ resolve, event }) => {",
      "  $1",
      "",
      "  return await resolve(event);",
      "};"
    ],
    "description": "The boilerplate for an empty handle in the hooks.server.ts file."
  },
  "Svelte server layout load function": {
    "prefix": "sv-server-layout-load",
    "body": [
      "import type { LayoutLoad } from './\\$types';",
      "",
      "export const load: LayoutLoad = async ({ data }) => {",
      "  $1",
      "",
      "  return { ...data };",
      "};"
    ],
    "description": "The boilerplate for a load function in a +layout.server.ts file."
  },
  "Svelte client layout load function": {
    "prefix": "sv-client-layout-load",
    "body": [
      "import type { LayoutServerLoad } from './\\$types';",
      "",
      "export const load: LayoutServerLoad = async ({}) => {",
      "  $1",
      "",
      "  return {};",
      "};"
    ],
    "description": "The boilerplate for a load function in a +layout.server.ts file."
  },
  "Svelte server page load function": {
    "prefix": "sv-server-page-load",
    "body": [
      "import type { PageServerLoad } from './\\$types';",
      "",
      "export const load: PageServerLoad = async ({}) => {",
      "  $1",
      "",
      "  return {};",
      "};"
    ],
    "description": "The boilerplate for a load function in a +page.server.ts file."
  },
  "Svelte client page load function ": {
    "prefix": "sv-client-page-load",
    "body": [
      "import type { PageLoad } from './\\$types';",
      "",
      "export const load: PageLoad = async ({ data }) => {",
      "  $2",
      "",
      "  return { ...data };",
      "};"
    ],
    "description": "The boilerplate for a load function in a +page.server.ts file."
  },
  "Svelte actions": {
    "prefix": "sv-actions",
    "body": [
      "import type { Actions } from './\\$types';",
      "",
      "export const actions: Actions = {",
      "  default: async ({ request }) => {",
      "    const formData = await request.formData();",
      "",
      "    return {};",
      "  }",
      "};"
    ],
    "description": "The boilerplate for actions in a +page.server.ts file."
  }
}
